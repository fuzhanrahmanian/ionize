{"name":"ionize","tagline":"A unified Python module for calculating buffer properties.","body":"ionize\r\n=====\r\nA unified Python module for calculating buffer properties.\r\n\r\n**ionize** calculates the properties of individual ionic species in\r\naqueous solution, as well as aqueous solutions containing arbitrary\r\nsets of ions.\r\n\r\nThe **ionize** model is based on techniques previously demonstrated by\r\n[Peakmaster][peakmaster], [Spresso][Spresso], and [STEEP][STEEP]. The **ionize**\r\nmodel takes into account pH, ionic strength, and temperature effects, including\r\nthe  most up-to-date temperature model published in STEEP. The **ionize** object\r\nclasses make these techniques directly accessible as a backend for simulations\r\nwritten in python.\r\n\r\nTutorial\r\n--------\r\nWant to use **ionize**? Read the [tutorial][tutorial], written in ipython\r\nnotebook.\r\n\r\nionize Components\r\n-----------------\r\n**ionize** is composed of three main components:\r\n\r\n###The Ion Class\r\nThe core of **ionize** is the **Ion** class, which  represents a single ionic\r\nspecies. An ion contains a name, a set of ionization states, and an optional\r\ntemperature parameter. Each ionization state contains a charge, a pKa, and\r\nan absolute mobility. An ionization  state may also include values for\r\n&Delta;H and &Delta;Cp of ionization to improve the accuracy of temperature\r\ncorrection.\r\n\r\n###The Solution Class\r\nThe **Solution** class is used to represent an aqueous solution containing any\r\nnumber of ionic species. A **Solution** contains a list of **Ion** objects, and\r\na second list containing the concentrations of each species. **Solution** can\r\nalso take an optional temperature parameter. **Solution** solves for pH,\r\niteratively accounting for the ionic strength. The ionic strength and pH are\r\nused to calculate the properties of the **Ions**, and bulk properties of the\r\nsolution such as conductivity.\r\n\r\n###The ionize Database\r\n**ionize** also contains its own database, containing the combined entries of\r\nthe Spresso and STEEP databases. This database can be accessed through the\r\n**load_ion**() and **search_ion**() functions.\r\n\r\n\r\n[peakmaster]: http://web.natur.cuni.cz/gas/ \"Peakmaster\"\r\n[Spresso]: http://stanfordspresso.blogspot.com/ \"Spresso\"\r\n[STEEP]: http://microfluidics.stanford.edu/download/ \"STEEP\"\r\n[tutorial]: http://nbviewer.ipython.org/github/lewisamarshall/ionize/blob/master/tutorial.ipynb  \"ionize Tutorial\"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}